set nocompatible " enter the current millenium
filetype off     " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
Plugin 'Vimjas/vim-python-pep8-indent'
Plugin 'ap/vim-buftabline'
Plugin 'davidhalter/jedi-vim.git'
Plugin 'ervandew/supertab.git'
Plugin 'itchyny/lightline.vim'
Plugin 'jiangmiao/auto-pairs.git'
Plugin 'majutsushi/tagbar.git'
Plugin 'mhinz/vim-signify'
Plugin 'mileszs/ack.vim.git'
Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdcommenter.git'
Plugin 'scrooloose/nerdtree.git'
Plugin 'vim-scripts/indentpython.vim'
" All of your Plugins must be added before the following line

call vundle#end()            " required
filetype plugin indent on    " required

let mapleader = ","

" enable syntax
syntax enable

set autochdir                   " Set the working directory to wherever the open file lives
set autoindent                  " copy indent from current line
set autoread                    " read open files again when changed outside Vim
set autowrite                   " write a modified buffer on each :next , ...
set backspace=indent,eol,start  " backspacing over everything in insert mode
set binary                      " encoding
set bomb                        " encoding
set browsedir=current           " which directory to use for the file browser
set cindent
set complete+=k                 " scan the files given with the 'dictionary' option
set cursorcolumn                " highlight column where cursor is
set cursorline                  " highlight line where cursor is
set encoding=utf-8              " encoding
set expandtab                   " tabs
set fileformats=unix,dos,mac    " file formats
set fileencoding=utf-8          " encoding
set fileencodings=utf-8         " encoding
set hidden                      " enable hidden buffers
set history=50                  " keep 50 lines of command line history
set hlsearch                    " highlightthe last used search pattern
set ignorecase                  " ignore case
set incsearch                   " do incremental searching
set laststatus=2                " set statusline to appear all the time
set modeline                    " use modeline overrides
set modelines=10                " use moduline overrides
set mouse=a                     " enable the use of the mouse
set mousemodel=popup
set nowrap                      " do not wrap lines
set number                      " display line numbers
set numberwidth=4
set path+=**                    " Search down into subfolders
set popt=left:8pc,right:3pc     " print options
set ruler                       " show the cursor position all the time
set sessionoptions-=options
set shell=/bin/bash             " shell preference
set shiftwidth=4                " number of spaces to use for each step of indent
set showcmd                     " display incomplete commands
set showmatch                   " show the matching part of the pair for [] {} and ()
set smartcase                   " searching
set smartindent                 " smart autoindenting when starting a new line
set smarttab                    " tabs
set softtabstop=4               " tabs
set splitbelow                  " split below when horizontal
set splitright                  " split to the right when vertical
set tabstop=4                   " number of spaces that a <Tab> counts for
set title
set titleold="Terminal"
set titlestring=%F
set ttyfast                     " encoding
set visualbell                  " visual bell instead of beeping
set wildignore=*.bak,*.o,*.e,*~ " wildmenu: ignore these extensions
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png,*.ico
set wildignore+=*.pdf,*.psd,*.pyc
set wildignore+=node_modules/*,bower_components/*
set wildmenu                    " Display all matching files when we tab complete

set t_Co=256
colorscheme lucius
set background=dark

" enable all Python syntax highlighting features
let python_highlight_all = 1

" NERDTree configuration
let g:NERDTreeChDirMode=2
let g:NERDTreeIgnore=['\.rbc$', '\~$', '\.pyc$', '\.db$', '\.sqlite$', '__pycache__']
let g:NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$', '\.bak$', '\~$']
let g:NERDTreeShowBookmarks=1
let g:nerdtree_tabs_focus_on_files=1
let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'
let g:NERDTreeWinSize = 50
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite
map <Leader>n :NERDTreeToggle<CR>

" Tagbar configuration
map <Leader>t :TagbarToggle<CR>
let g:tagbar_autofocus = 1

" Ack configuration
cnoreabbrev Ack Ack!
nnoremap <Leader>a :Ack!<Space>

" Flake8 configuration
autocmd FileType python map <buffer> <Leader>8 :call Flake8()<CR>

" Signify configuration
let g:signify_vcs_list = ['git','hg']

" buftabline configuration
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>

" NERDcommenter configuration
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1
